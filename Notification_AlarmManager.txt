ActivityMain.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:backgroundTint="@color/colorAccent"
    android:background="@color/colorPrimaryDark"
    android:layout_height="match_parent"
    tools:context=".MainActivity">
  <Button
      android:layout_width="match_parent"
      android:id="@+id/noti"
      android:text=”notify”
      android:layout_height="wrap_content">
  </Button>
</LinearLayout>
MainActivity.kt
package com.example.notification
import android.app.Notification
import android.app.NotificationChannel
import android.app.NotificationManager
import android.app.PendingIntent
import android.content.Context
import android.content.Intent
import android.graphics.Color
import android.os.Build
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
class MainActivity : AppCompatActivity() {
    lateinit var notificationManager:NotificationManager
    lateinit var notibuilder:Notification.Builder
    lateinit var notificationchanel:NotificationChannel
    val channelid="com.example.notification"
    val description="Hello this is Practical Notification"
    lateinit var noti:Button
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        noti = findViewById(R.id.noti)
        noti.setOnClickListener({
            makenotification()})}
    private fun makenotification() {
        var intent = Intent(this, MainActivity::class.java)
        var pendingIntent =
            PendingIntent.getActivity(this, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT)
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            notificationchanel =NotificationChannel(channelid, description, NotificationManager.IMPORTANCE_HIGH)
            notificationchanel.enableLights(true)
            notificationchanel.lightColor = Color.RED
            notificationchanel.enableVibration(true)
            notificationManager=getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager
            notificationManager.createNotificationChannel(notificationchanel)
            notibuilder = Notification.Builder(this, channelid)
            notibuilder.setContentTitle("GPM")
            notibuilder.setSmallIcon(R.mipmap.ic_launcher)
            notibuilder.setContentText("Hello Students !!")
            notibuilder.setContentIntent(pendingIntent)
            notibuilder.setAutoCancel(true)
        } else {
            notibuilder = Notification.Builder(this)
            notibuilder.setContentTitle("GPM")
            notibuilder.setSmallIcon(R.mipmap.ic_launcher)
            notibuilder.setContentText("Hello Students !!")
            notibuilder.setContentIntent(pendingIntent)
            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
                notificationManager.notify(0, notibuilder.build())}}}}
